using System;
using System.Data;
using System.Configuration;
using System.Collections;
using System.Web;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;
using System.Web.UI.HtmlControls;
using DatumDAL;
using Yantra.MessageBox;
using System.Net.NetworkInformation;
using System.Management;
using System.Net;
using System.Net.Mail;
using System.IO;
using iTextSharp.text;
using iTextSharp.text.html;
using iTextSharp.text.html.simpleparser;
using iTextSharp.text.pdf;
using System.Data.SqlClient;


public partial class Modules_HR_Emp_InterviewResult : System.Web.UI.Page
{
    SqlConnection con = new SqlConnection(ConfigurationManager.ConnectionStrings["DBCon"].ToString());
    int i;
    string email = "";
    string age = "";
    double Basic1 = 0;
    double Basic2 = 0;
    double Hra1 = 0;
    double Hra2 = 0;
    double Other1 = 0;
    double Other2 = 0;
    double GrossTotal1 = 0;
    double GrossTotal2 = 0;
    double Pf1 = 0;
    double Pf2 = 0;
    double Medi1 = 0;
    double Medi2 = 0;
    double Bouns1 = 0;
    double Bouns2 = 0;
    double EcTotal1 = 0;
    double EcTotal2 = 0;
    double Ptax = 0;
    double EdTotal = 0;

    double CtcPm = 0;
    double CtcPa = 0;

    double NetPay = 0;

    protected void Page_Load(object sender, EventArgs e)
    {
        if (!IsPostBack)
        {
            //HR.EmployeeMaster.EmployeeMaster_Select(ddlEmpName);
            BindAge();

        }
    }

    private void BindAge()
    {
        foreach (GridViewRow gvr in gvEnrollmentDtls.Rows)
        {
            if (((CheckBox)gvr.FindControl("Chk")).Checked)
            {
                    Label Id = (Label)gvr.FindControl("lblNo");
                Label a=(Label)gvr.FindControl("lblAge");
                    SqlCommand cmd = new SqlCommand("USP_BindAge", con);
                    cmd.CommandType = CommandType.StoredProcedure;
                    cmd.Parameters.AddWithValue("@EnrollmentId", Id.Text);
                    SqlDataAdapter da = new SqlDataAdapter(cmd);
                    DataTable dt = new DataTable();
                    age = a.Text = dt.ToString();
                }
           
        }
}

    
    protected void Button1_Click(object sender, EventArgs e)
    {
        // GrossAmount Calculation
        if (txtGrossAmount.Text != "")
        {
            Basic1 = (((double.Parse(txtGrossAmount.Text) * 60) / 100));
            txtBasic1.Text = Basic1.ToString();

            Basic2 = Basic1 * 12;
            txtBasic2.Text = Basic2.ToString();

            Hra1 = (((Basic1 * 40) / 100));
            txtHRA1.Text = Hra1.ToString();

            Hra2 = Hra1 * 12;
            txtHRA2.Text = Hra2.ToString();

            Other1 = (double.Parse(txtGrossAmount.Text) - Basic1 - Hra1);
            txtOther1.Text = Other1.ToString();

            Other2 = Other1 * 12;
            txtOther2.Text = Other2.ToString();

            GrossTotal1 = (Basic1 + Hra1 + Other1);
            txtGrossTotal1.Text = GrossTotal1.ToString();

            GrossTotal2 = (Basic2 + Hra2 + Other2);
            txtGrossTotal2.Text = GrossTotal2.ToString();

            Pf1 = ((Basic1 * 12) / 100);
            if (Pf1 >= 780)
            {
                Pf1 = 780;
                txtPF1.Text = Pf1.ToString();
                txtEDpf.Text = Pf1.ToString();
            }
            else
            {
                txtPF1.Text = Pf1.ToString();
                txtEDpf.Text = Pf1.ToString();
            }


            Pf2 = double.Parse(txtPF1.Text) * 12;
            txtPF2.Text = Pf2.ToString();

            #region Age
            if (age != "")
            {
                if ((int.Parse(age) <= 25))
                {
                    Medi1 = 45;
                    txtMedi1.Text = Medi1.ToString();

                    Medi2 = (Medi1 * 12);
                    txtMedi2.Text = Medi2.ToString();
                }
                if (int.Parse(age) >= 26 && int.Parse(age) <= 35)
                {
                    Medi1 = 59;
                    txtMedi1.Text = Medi1.ToString();

                    Medi2 = (Medi1 * 12);
                    txtMedi2.Text = Medi2.ToString();
                }

                if (int.Parse(age) >= 36 && int.Parse(age) <= 45)
                {
                    Medi1 = 80;
                    txtMedi1.Text = Medi1.ToString();

                    Medi2 = (Medi1 * 12);
                    txtMedi2.Text = Medi2.ToString();
                }
                if (int.Parse(age) >= 46 && int.Parse(age) <= 55)
                {
                    Medi1 = 136;
                    txtMedi1.Text = Medi1.ToString();

                    Medi2 = (Medi1 * 12);
                    txtMedi2.Text = Medi2.ToString();
                }
                if (int.Parse(age) >= 56 && int.Parse(age) <= 65)
                {
                    Medi1 = 180;
                    txtMedi1.Text = Medi1.ToString();

                    Medi2 = (Medi1 * 12);
                    txtMedi2.Text = Medi2.ToString();
                }
                if (int.Parse(age) >= 66 && int.Parse(age) <= 70)
                {
                    Medi1 = 224;
                    txtMedi1.Text = Medi1.ToString();

                    Medi2 = (Medi1 * 12);
                    txtMedi2.Text = Medi2.ToString();
                }

                if (int.Parse(age) >= 71 && int.Parse(age) <= 75)
                {
                    Medi1 = 240;
                    txtMedi1.Text = Medi1.ToString();

                    Medi2 = (Medi1 * 12);
                    txtMedi2.Text = Medi2.ToString();
                }
                if (int.Parse(age) >= 76 && int.Parse(age) <= 80)
                {
                    Medi1 = 296;
                    txtMedi1.Text = Medi1.ToString();

                    Medi2 = (Medi1 * 12);
                    txtMedi2.Text = Medi2.ToString();
                }
            }
            else
            {
                Medi1 = 0;
                txtMedi1.Text = Medi1.ToString();

                Medi2 = (Medi1 * 12);
                txtMedi2.Text = Medi2.ToString();
            }

            #endregion

            Bouns1 = (((double.Parse(txtGrossAmount.Text) * 8.33) / 100));
            txtBonus1.Text = Bouns1.ToString();

            Bouns2 = Bouns1 * 12;
            txtBonus2.Text = Bouns2.ToString();

            EcTotal1 = (Pf1 + Medi1 + Bouns1);
            txtECTotal1.Text = EcTotal1.ToString();

            EcTotal2 = (Pf2 + Medi2 + Bouns2);
            txtECTotal2.Text = EcTotal2.ToString();


            if (int.Parse(txtGrossAmount.Text) <= 5000)
            {
                Ptax = 0;
                txtEDptax.Text = Ptax.ToString();
            }

            if (int.Parse(txtGrossAmount.Text) >= 5001 && int.Parse(txtGrossAmount.Text) <= 6000)
            {
                Ptax = 60;
                txtEDptax.Text = Ptax.ToString();
            }

            if (int.Parse(txtGrossAmount.Text) >= 6001 && int.Parse(txtGrossAmount.Text) <= 10000)
            {
                Ptax = 80;
                txtEDptax.Text = Ptax.ToString();
            }

            if (int.Parse(txtGrossAmount.Text) >= 10001 && int.Parse(txtGrossAmount.Text) <= 15000)
            {
                Ptax = 100;
                txtEDptax.Text = Ptax.ToString();
            }
            if (int.Parse(txtGrossAmount.Text) >= 15001 && int.Parse(txtGrossAmount.Text) <= 20000)
            {
                Ptax = 150;
                txtEDptax.Text = Ptax.ToString();
            }
            if (int.Parse(txtGrossAmount.Text) >= 20000)
            {
                Ptax = 200;
                txtEDptax.Text = Ptax.ToString();
            }

            EdTotal = Pf1 + Ptax;
            txtEDTotal.Text = EdTotal.ToString();

            CtcPm = GrossTotal1 + EcTotal1;
            txtCTCPM.Text = CtcPm.ToString();

            CtcPa = GrossTotal2 + EcTotal2;
            txtCTCPA.Text = CtcPa.ToString();

            NetPay = GrossTotal1 - EdTotal;

            txtNetSal.Text = NetPay.ToString();

//#################################

            //for BasicSalaryCalculation
            if (txtBasicAmount.Text != "")
            {
                //    Basic1 = (((double.Parse(txtGrossAmount.Text) * 60) / 100));
                //    txtBasic1.Text = Basic1.ToString();

                //    Basic2 = Basic1 * 12;
                //    txtBasic2.Text = Basic2.ToString();

                GrossTotal1 = (((double.Parse(txtBasicAmount.Text) / 60) * 100));
                txtGrossTotal1.Text = GrossTotal1.ToString();

                GrossTotal2 = GrossTotal1 * 12;
                txtGrossTotal2.Text = GrossTotal2.ToString();

                Hra1 = (((Convert.ToDouble(txtBasicAmount.Text) * 40) / 100));
                txtHRA1.Text = Hra1.ToString();

                Hra2 = Hra1 * 12;
                txtHRA2.Text = Hra2.ToString();

                Other1 = (GrossTotal1 - (Convert.ToDouble(txtBasicAmount.Text) + Hra1));
                txtOther1.Text = Other1.ToString();

                Other2 = Other1 * 12;
                txtOther2.Text = Other2.ToString();

                //GrossTotal1 = (Basic1 + Hra1 + Other1);
                //txtGrossTotal1.Text = GrossTotal1.ToString();

                //GrossTotal2 = (Basic2 + Hra2 + Other2);
                //txtGrossTotal2.Text = GrossTotal2.ToString();

                Basic1 = Convert.ToDouble(txtBasicAmount.Text);
                txtBasic1.Text = Basic1.ToString();

                Basic2 = Basic1 * 12;
                txtBasic2.Text = Basic2.ToString();
                Pf1 = ((Basic1 * 12) / 100);
                if (Pf1 >= 780)
                {
                    Pf1 = 780;
                    txtPF1.Text = Pf1.ToString();
                    txtEDpf.Text = Pf1.ToString();
                }
                else
                {
                    txtPF1.Text = Pf1.ToString();
                    txtEDpf.Text = Pf1.ToString();
                }


                Pf2 = double.Parse(txtPF1.Text) * 12;
                txtPF2.Text = Pf2.ToString();

                #region Age
                if (age != "")
                {
                    if ((int.Parse(age) <= 25))
                    {
                        Medi1 = 45;
                        txtMedi1.Text = Medi1.ToString();

                        Medi2 = (Medi1 * 12);
                        txtMedi2.Text = Medi2.ToString();
                    }
                    if (int.Parse(age) >= 26 && int.Parse(age) <= 35)
                    {
                        Medi1 = 59;
                        txtMedi1.Text = Medi1.ToString();

                        Medi2 = (Medi1 * 12);
                        txtMedi2.Text = Medi2.ToString();
                    }

                    if (int.Parse(age) >= 36 && int.Parse(age) <= 45)
                    {
                        Medi1 = 80;
                        txtMedi1.Text = Medi1.ToString();

                        Medi2 = (Medi1 * 12);
                        txtMedi2.Text = Medi2.ToString();
                    }
                    if (int.Parse(age) >= 46 && int.Parse(age) <= 55)
                    {
                        Medi1 = 136;
                        txtMedi1.Text = Medi1.ToString();

                        Medi2 = (Medi1 * 12);
                        txtMedi2.Text = Medi2.ToString();
                    }
                    if (int.Parse(age) >= 56 && int.Parse(age) <= 65)
                    {
                        Medi1 = 180;
                        txtMedi1.Text = Medi1.ToString();

                        Medi2 = (Medi1 * 12);
                        txtMedi2.Text = Medi2.ToString();
                    }
                    if (int.Parse(age) >= 66 && int.Parse(age) <= 70)
                    {
                        Medi1 = 224;
                        txtMedi1.Text = Medi1.ToString();

                        Medi2 = (Medi1 * 12);
                        txtMedi2.Text = Medi2.ToString();
                    }

                    if (int.Parse(age) >= 71 && int.Parse(age) <= 75)
                    {
                        Medi1 = 240;
                        txtMedi1.Text = Medi1.ToString();

                        Medi2 = (Medi1 * 12);
                        txtMedi2.Text = Medi2.ToString();
                    }
                    if (int.Parse(age) >= 76 && int.Parse(age) <= 80)
                    {
                        Medi1 = 296;
                        txtMedi1.Text = Medi1.ToString();

                        Medi2 = (Medi1 * 12);
                        txtMedi2.Text = Medi2.ToString();
                    }
                }
                else
                {
                    Medi1 = 0;
                    txtMedi1.Text = Medi1.ToString();

                    Medi2 = (Medi1 * 12);
                    txtMedi2.Text = Medi2.ToString();
                }

                #endregion

                Bouns1 = (((GrossTotal1 * 8.33) / 100));
                txtBonus1.Text = Bouns1.ToString();

                Bouns2 = Bouns1 * 12;
                txtBonus2.Text = Bouns2.ToString();

                EcTotal1 = (Pf1 + Medi1 + Bouns1);
                txtECTotal1.Text = EcTotal1.ToString();

                EcTotal2 = (Pf2 + Medi2 + Bouns2);
                txtECTotal2.Text = EcTotal2.ToString();


                if ((GrossTotal1) <= 5000)
                {
                    Ptax = 0;
                    txtEDptax.Text = Ptax.ToString();
                }

                if (GrossTotal1 >= 5001 && GrossTotal1 <= 6000)
                {
                    Ptax = 60;
                    txtEDptax.Text = Ptax.ToString();
                }

                if (GrossTotal1 >= 6001 && GrossTotal1 <= 10000)
                {
                    Ptax = 80;
                    txtEDptax.Text = Ptax.ToString();
                }

                if (GrossTotal1 >= 10001 && GrossTotal1 <= 15000)
                {
                    Ptax = 100;
                    txtEDptax.Text = Ptax.ToString();
                }
                if (GrossTotal1 >= 15001 && GrossTotal1 <= 20000)
                {
                    Ptax = 150;
                    txtEDptax.Text = Ptax.ToString();
                }
                if (GrossTotal1 >= 20000)
                {
                    Ptax = 200;
                    txtEDptax.Text = Ptax.ToString();
                }

                EdTotal = Pf1 + Ptax;
                txtEDTotal.Text = EdTotal.ToString();

                CtcPm = GrossTotal1 + EcTotal1;
                txtCTCPM.Text = CtcPm.ToString();

                CtcPa = GrossTotal2 + EcTotal2;
                txtCTCPA.Text = CtcPa.ToString();

                NetPay = GrossTotal1 - EdTotal;

                txtNetSal.Text = NetPay.ToString();



            }
            //##########################################
            //For hra Calculations
            if (txtHRAAmount.Text != "")
            {
                Basic1 = (((double.Parse(txtHRAAmount.Text) / 40) * 100));
                txtBasic1.Text = Basic1.ToString();

                Basic2 = Basic1 * 12;
                txtBasic2.Text = Basic2.ToString();

                Hra1 = (((Basic1 * 40) / 100));
                txtHRA1.Text = Hra1.ToString();

                Hra2 = Hra1 * 12;
                txtHRA2.Text = Hra2.ToString();

                GrossTotal1 = (((Basic1 / 60) * 100));
                txtGrossTotal1.Text = GrossTotal1.ToString();

                GrossTotal2 = GrossTotal1 * 12;
                txtGrossTotal2.Text = GrossTotal2.ToString();

                Other1 = (GrossTotal1 - (Basic1 + Hra1));
                txtOther1.Text = Other1.ToString();

                Other2 = Other1 * 12;
                txtOther2.Text = Other2.ToString();

                Hra1 = Convert.ToDouble(txtHRAAmount.Text);
                txtHRAAmount.Text = Hra1.ToString();

                Hra2 = Hra1 * 12;
                txtHRA2.Text = Hra2.ToString();

                Pf1 = ((Basic1 * 12) / 100);
                if (Pf1 >= 780)
                {
                    Pf1 = 780;
                    txtPF1.Text = Pf1.ToString();
                    txtEDpf.Text = Pf1.ToString();
                }
                else
                {
                    txtPF1.Text = Pf1.ToString();
                    txtEDpf.Text = Pf1.ToString();
                }


                Pf2 = double.Parse(txtPF1.Text) * 12;
                txtPF2.Text = Pf2.ToString();

                #region Age
                if (age != "")
                {
                    if ((int.Parse(age) <= 25))
                    {
                        Medi1 = 45;
                        txtMedi1.Text = Medi1.ToString();

                        Medi2 = (Medi1 * 12);
                        txtMedi2.Text = Medi2.ToString();
                    }
                    if (int.Parse(age) >= 26 && int.Parse(age) <= 35)
                    {
                        Medi1 = 59;
                        txtMedi1.Text = Medi1.ToString();

                        Medi2 = (Medi1 * 12);
                        txtMedi2.Text = Medi2.ToString();
                    }

                    if (int.Parse(age) >= 36 && int.Parse(age) <= 45)
                    {
                        Medi1 = 80;
                        txtMedi1.Text = Medi1.ToString();

                        Medi2 = (Medi1 * 12);
                        txtMedi2.Text = Medi2.ToString();
                    }
                    if (int.Parse(age) >= 46 && int.Parse(age) <= 55)
                    {
                        Medi1 = 136;
                        txtMedi1.Text = Medi1.ToString();

                        Medi2 = (Medi1 * 12);
                        txtMedi2.Text = Medi2.ToString();
                    }
                    if (int.Parse(age) >= 56 && int.Parse(age) <= 65)
                    {
                        Medi1 = 180;
                        txtMedi1.Text = Medi1.ToString();

                        Medi2 = (Medi1 * 12);
                        txtMedi2.Text = Medi2.ToString();
                    }
                    if (int.Parse(age) >= 66 && int.Parse(age) <= 70)
                    {
                        Medi1 = 224;
                        txtMedi1.Text = Medi1.ToString();

                        Medi2 = (Medi1 * 12);
                        txtMedi2.Text = Medi2.ToString();
                    }

                    if (int.Parse(age) >= 71 && int.Parse(age) <= 75)
                    {
                        Medi1 = 240;
                        txtMedi1.Text = Medi1.ToString();

                        Medi2 = (Medi1 * 12);
                        txtMedi2.Text = Medi2.ToString();
                    }
                    if (int.Parse(age) >= 76 && int.Parse(age) <= 80)
                    {
                        Medi1 = 296;
                        txtMedi1.Text = Medi1.ToString();

                        Medi2 = (Medi1 * 12);
                        txtMedi2.Text = Medi2.ToString();
                    }
                }
                else
                {
                    Medi1 = 0;
                    txtMedi1.Text = Medi1.ToString();

                    Medi2 = (Medi1 * 12);
                    txtMedi2.Text = Medi2.ToString();
                }

                #endregion

                Bouns1 = (((GrossTotal1 * 8.33) / 100));
                txtBonus1.Text = Bouns1.ToString();

                Bouns2 = Bouns1 * 12;
                txtBonus2.Text = Bouns2.ToString();

                EcTotal1 = (Pf1 + Medi1 + Bouns1);
                txtECTotal1.Text = EcTotal1.ToString();

                EcTotal2 = (Pf2 + Medi2 + Bouns2);
                txtECTotal2.Text = EcTotal2.ToString();


                if (GrossTotal1 <= 5000)
                {
                    Ptax = 0;
                    txtEDptax.Text = Ptax.ToString();
                }

                if (GrossTotal1 >= 5001 && GrossTotal1 <= 6000)
                {
                    Ptax = 60;
                    txtEDptax.Text = Ptax.ToString();
                }

                if (GrossTotal1 >= 6001 && GrossTotal1 <= 10000)
                {
                    Ptax = 80;
                    txtEDptax.Text = Ptax.ToString();
                }

                if (GrossTotal1 >= 10001 && GrossTotal1 <= 15000)
                {
                    Ptax = 100;
                    txtEDptax.Text = Ptax.ToString();
                }
                if (GrossTotal1 >= 15001 && GrossTotal1 <= 20000)
                {
                    Ptax = 150;
                    txtEDptax.Text = Ptax.ToString();
                }
                if (GrossTotal1 >= 20000)
                {
                    Ptax = 200;
                    txtEDptax.Text = Ptax.ToString();
                }

                EdTotal = Pf1 + Ptax;
                txtEDTotal.Text = EdTotal.ToString();

                CtcPm = GrossTotal1 + EcTotal1;
                txtCTCPM.Text = CtcPm.ToString();

                CtcPa = GrossTotal2 + EcTotal2;
                txtCTCPA.Text = CtcPa.ToString();

                NetPay = GrossTotal1 - EdTotal;

                txtNetSal.Text = NetPay.ToString();
            }


        }
    }
    //protected void btnPrint_Click(object sender, EventArgs e)
    //{
    //    Session["ctrl"] = Panel1;
    //    ClientScript.RegisterStartupScript(this.GetType(), "onclick", "<script language=javascript>window.open('../HR/Print.aspx','PrintMe','height=600,width=900,scrollbars=yes');</script>");
    //}
    //protected void ddlEmpName_SelectedIndexChanged(object sender, EventArgs e)
    //{
    //    try
    //    {
    //        HR.EmployeeMaster objHR = new HR.EmployeeMaster();
    //        //if (objHR.EmployeeMaster_Select(ddlEmpName.SelectedItem.Value) > 0)
    //        //{

    //            txtGrossAmount.Text = objHR.GrossSal;
    //            long yrs;
    //            System.DateTime date2 = System.DateTime.Now;
    //            System.DateTime date1 = new DateTime(Int64.Parse(objHR.grossdob));
    //            yrs = DateDiff(date1, date2);
    //          //  age = yrs.ToString();
    //            age = yrs.ToString();
    //            lblEmpname.Text = objHR.EmpFirstName;

    //            Button1_Click(sender, e);
    //        //}
    //    }
    //    catch (Exception ex)
    //    {
    //        MessageBox.Show(this, ex.Message);
    //    }
    //    finally
    //    {
    //        HR.Dispose();
    //    }
    //}

    public long DateDiff(System.DateTime StartDate, System.DateTime EndDate)
    {
        long lngDateDiffValue = 0;
        System.TimeSpan TS = new System.TimeSpan(EndDate.Ticks - StartDate.Ticks);
        lngDateDiffValue = (long)(TS.Days / 365);
        return (lngDateDiffValue);
    }

    protected void chkhdr_CheckedChanged(object sender, EventArgs e)
    {
        CheckBox ChkBoxHeader = (CheckBox)gvEnrollmentDtls.HeaderRow.FindControl("chkhdr");
        foreach (GridViewRow row in gvEnrollmentDtls.Rows)
        {
            CheckBox ChkBoxRows = (CheckBox)row.FindControl("Chk");
            if (ChkBoxHeader.Checked == true)
            {
                ChkBoxRows.Checked = true;
                Label mail=(Label)row.FindControl("lblEmail");
                email = mail.Text;
                //saveCheckedValues();
                //populateCheckedValues();
            }
            else
            {
                ChkBoxRows.Checked = false;
            }
        }
    }

    
    protected void btnAccept_Click(object sender, EventArgs e)
    {
        Details.Visible = true;

    }
    protected void btnReject_Click(object sender, EventArgs e)
    {
         i = 0;
        InterviewReject();
    }
    private void InterviewReject()
    {
        foreach (GridViewRow gvr in gvEnrollmentDtls.Rows)
        {
            if (((CheckBox)gvr.FindControl("Chk")).Checked)
            {
                try
                {
                    Label EnrollId = (Label)gvr.FindControl("lblNo");
                    SqlCommand cmd = new SqlCommand("USP_UpdateInterviewStatus",con);
                    cmd.CommandType = CommandType.StoredProcedure;
                    cmd.Parameters.AddWithValue("@EnrollmentId", EnrollId.Text);
                    if(i==1)
                    {
                        cmd.Parameters.AddWithValue("@InterviewStatus", "Accepted");

                    }
                    else if(i==0)
                    {
                        cmd.Parameters.AddWithValue("@InterviewStatus", "Reject");

                    }
                    con.Open();
                    cmd.ExecuteNonQuery();
                    con.Close();
                    //HR.EmpLeave.InterviewSchedule obj = new HR.EmpLeave.InterviewSchedule();
                    //obj.InterviewStatus = "Rejected";
                    //obj.GrossSalary="";
                    //obj.CompanyName = "";
                    //obj.DepartmentName = "";
                    //obj.DesignationName = "";
                    //obj.DateOfJoining = "";
                    //obj.EnrollmentId = Id.Text;
                    //MessageBox.Show(this, obj.InterviewApprove_Update());
                    gvHistory.DataBind();
                    //gvEnrollmentDtls.DataBind();
                }

                catch (Exception ex)
                {
                    MessageBox.Show(this, ex.Message.ToString());
                }
                finally
                {

                }
            }

        }
        
    }

    

    protected void btnSubmit_Click(object sender, EventArgs e)
    {
        i = 1;
        InterviewReject();
        SendSalaryBreakUp();
        //InterviewAccept();
        gvEnrollmentDtls.DataBind();
        HR.ClearControls(this);
        Details.Visible = false;
    }

    private void InterviewAccept()
    {
        foreach (GridViewRow gvr in gvEnrollmentDtls.Rows)
        {
            if (((CheckBox)gvr.FindControl("Chk")).Checked)
            {
                try
                {
                    Label Id = (Label)gvr.FindControl("lblNo");
                     HR.EmpLeave.InterviewSchedule obj = new HR.EmpLeave.InterviewSchedule();
                    obj.InterviewStatus = "Accepted";
                    obj.GrossSalary=txtGrossAmount.Text;
                    obj.OfferStatus = "Pending";
                    obj.CompanyName = "";
                    obj.DepartmentName = "";
                    obj.DesignationName = "";
                    obj.DateOfJoining = "";
                    obj.EnrollmentId = Id.Text;
                    MessageBox.Show(this, obj.InterviewApprove_Update());
                    gvHistory.DataBind();
                    gvEnrollmentDtls.DataBind();
                }

                catch (Exception ex)
                {
                    MessageBox.Show(this, ex.Message.ToString());
                }
                finally
                {

                }
            }

        }
    }

    private void SendSalaryBreakUp()
    {
        foreach (GridViewRow gvr in gvEnrollmentDtls.Rows)
        {
            if (((CheckBox)gvr.FindControl("Chk")).Checked)
            {
                Label email = (Label)gvr.FindControl("lblEmail");

                StreamReader reader = new StreamReader(Server.MapPath("~/Modules/HR/SalaryBreakuptemplate.html"));
                string readFile = reader.ReadToEnd();
                string myString = "";
                myString = readFile;
                myString = myString.Replace("$$Basic$$", txtBasic1.Text);
                myString = myString.Replace("$$YBasic$$", txtBasic2.Text);
                myString = myString.Replace("$$HRA$$", txtHRA1.Text);
                myString = myString.Replace("$$YHRA$$", txtHRA2.Text);
                myString = myString.Replace("$$Other$$", txtOther1.Text);
                myString = myString.Replace("$$YOther$$", txtOther2.Text);
                myString = myString.Replace("$$Gross$$", txtGrossTotal1.Text);
                myString = myString.Replace("$$YGross$$", txtGrossTotal2.Text);


                myString = myString.Replace("$$PF$$", txtPF1.Text);
                myString = myString.Replace("$$YPF$$", txtPF2.Text);
                myString = myString.Replace("$$Bonus$$", txtBonus1.Text);
                myString = myString.Replace("$$YBonus$$", txtBonus2.Text);
                myString = myString.Replace("$$Total$$", txtECTotal1.Text);
                myString = myString.Replace("$$YTotal$$", txtECTotal2.Text);

                myString = myString.Replace("$$PF1$$", txtEDpf.Text);
                myString = myString.Replace("$$Ptax$$", txtEDptax.Text);
                myString = myString.Replace("$$Total1$$", txtEDTotal.Text);

                myString = myString.Replace("$$CTCPM$$", txtCTCPM.Text);
                myString = myString.Replace("$$CTCPA$$", txtCTCPA.Text);
                myString = myString.Replace("$$NET$$", txtNetSal.Text);

                //using (MemoryStream memoryStream = new MemoryStream())
                //{
                //    PdfWriter.GetInstance(myString, memoryStream);
                //    byte [] bytes=new memoryStream.ToArray();
                //    memoryStream.Close();
                    System.Net.Mail.MailMessage mymailmessage = new System.Net.Mail.MailMessage();
                    mymailmessage.Subject = "Salary Details from ValueLine Trade Pvt Ltd.";
                    mymailmessage.Body = myString.ToString();
                    //mymailmessage.Body = "Hi";
                    //mymailmessage.Attachments.Add(new Attachment(myString.ToString()));
                    mymailmessage.IsBodyHtml = true;

                    mymailmessage.From = new MailAddress("pramodbmk@gmail.com");
                    mymailmessage.To.Add(email.Text);
                    System.Net.NetworkCredential mymailauthentications = new System.Net.NetworkCredential("pramodbmk@gmail.com", "bommakal");

                    System.Net.Mail.SmtpClient mailclient = new System.Net.Mail.SmtpClient("smtp.gmail.com", 587);

                    mailclient.EnableSsl = true;
                    mailclient.UseDefaultCredentials = true;
                    mailclient.Credentials = mymailauthentications;
                    mymailmessage.DeliveryNotificationOptions = DeliveryNotificationOptions.OnSuccess;
                    mymailmessage.Headers.Add("Disposition-Notification-To", email.Text);
                    mailclient.Send(mymailmessage);
                    reader.Dispose();
            }
        }
        }

   
    protected void btnSearchGo_Click(object sender, EventArgs e)
    {
        lblSearchItemHidden.Text = ddlSearchBy.SelectedValue;
        lblSearchValueHidden.Text = txtSearchText.Text;
        gvHistory.DataBind();
    }

    protected void ddlSearchBy_SelectedIndexChanged(object sender, EventArgs e)
    {
        txtSearchText.Text = "";
    }
}